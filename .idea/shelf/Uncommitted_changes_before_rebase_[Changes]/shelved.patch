Index: Webhook.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;\r\nimport com.google.api.client.json.JsonFactory;\r\nimport com.google.api.client.json.jackson2.JacksonFactory;\r\nimport com.google.api.services.forms.v1.Forms;\r\nimport com.google.api.services.forms.v1.FormsScopes;\r\nimport com.google.api.services.forms.v1.model.FormResponse;\r\nimport com.google.api.services.forms.v1.model.ListFormResponsesResponse;\r\nimport com.google.auth.oauth2.GoogleCredentials;\r\nimport org.json.JSONArray;\r\nimport org.json.JSONObject;\r\nimport org.rapidoid.http.Req;\r\nimport org.rapidoid.http.Resp;\r\nimport org.rapidoid.setup.*;\r\n\r\n\r\nimport java.io.IOException;\r\nimport java.security.GeneralSecurityException;\r\nimport java.util.Objects;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\n\r\n\r\n\r\n\r\npublic class Webhook extends Privates {\r\n\r\n    final String question1Id = \"059d7375\", question2Id = \"106fb4ba\", question3Id = \"01f8242e\", question4Id = \"69fbc838\";\r\n\r\n    String name, college, major;\r\n\r\n    private static final String APPLICATION_NAME = \"apc-webhook\";\r\n    private static Forms formsService;\r\n\r\n\r\n    static {\r\n\r\n        try {\r\n\r\n            JsonFactory jsonFactory = JacksonFactory.getDefaultInstance();\r\n\r\n\r\n            formsService = new Forms.Builder(GoogleNetHttpTransport.newTrustedTransport(),\r\n                    jsonFactory, null)\r\n                    .setApplicationName(APPLICATION_NAME).build();\r\n\r\n        } catch (GeneralSecurityException | IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    public static void main(String[] args){\r\n\r\n        On.post(\"/fire\").html((Req req) -> {\r\n            Resp resp = req.response();\r\n            fireWebhook();\r\n            return resp;\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    public static void fireWebhook() throws IOException {\r\n\r\n        String token = getAccessToken();\r\n        readResponses(formID, token);\r\n        DiscordWebhook webhook = new DiscordWebhook(url);\r\n        webhook.setAvatarUrl(avatarUrl);\r\n        webhook.setContent(\"Test\");\r\n        webhook.execute();\r\n    }\r\n\r\n    public static String getAccessToken() throws IOException {\r\n        GoogleCredentials credential = GoogleCredentials.fromStream(Objects.requireNonNull(\r\n                Webhook.class.getResourceAsStream(\"creds.json\"))).createScoped(FormsScopes.all());\r\n        return credential.getAccessToken() != null ?\r\n                credential.getAccessToken().getTokenValue() :\r\n                credential.refreshAccessToken().getTokenValue();\r\n    }\r\n\r\n    public static void readResponses(String formId, String token) throws IOException {\r\n\r\n        ListFormResponsesResponse responses = formsService.forms().responses().list(formId).setOauthToken(token).execute();\r\n        JSONObject goodJson = new JSONObject(responses);\r\n        JSONArray arr = goodJson.getJSONArray(\"responses\");\r\n        String responseID = arr.getJSONObject(0).getString(\"responseId\");\r\n        System.out.println(responses.toPrettyString());\r\n        FormResponse response = formsService.forms().responses().get(formId, responseID).setOauthToken(token).execute();\r\n//        System.out.println(response.toPrettyString());\r\n        JSONObject responseJson = new JSONObject(response);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Webhook.java b/Webhook.java
--- a/Webhook.java	(revision 5339c863bc21203eacf190ae9e447fb380f94936)
+++ b/Webhook.java	(date 1668440419664)
@@ -91,7 +91,6 @@
         System.out.println(responses.toPrettyString());
         FormResponse response = formsService.forms().responses().get(formId, responseID).setOauthToken(token).execute();
 //        System.out.println(response.toPrettyString());
-        JSONObject responseJson = new JSONObject(response);
 
 
     }
